// AUTOGENERATED FILE - DO NOT MODIFY!
// This file generated by Djinni from StringMessage.djinni

#include "NativeStringMessage.hpp"  // my header
#include "Marshal.hpp"

namespace djinni_generated {

NativeStringMessage::NativeStringMessage() : ::djinni::JniInterface<::stringmessage::StringMessage, NativeStringMessage>("com/reactcppbridge/StringMessage$CppProxy") {}

NativeStringMessage::~NativeStringMessage() = default;


CJNIEXPORT void JNICALL Java_com_reactcppbridge_StringMessage_00024CppProxy_nativeDestroy(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        delete reinterpret_cast<::djinni::CppProxyHandle<::stringmessage::StringMessage>*>(nativeRef);
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, )
}

CJNIEXPORT jobject JNICALL Java_com_reactcppbridge_StringMessage_00024CppProxy_create(JNIEnv* jniEnv, jobject /*this*/)
{
    try {
        DJINNI_FUNCTION_PROLOGUE0(jniEnv);
        auto r = ::stringmessage::StringMessage::create();
        return ::djinni::release(::djinni_generated::NativeStringMessage::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

CJNIEXPORT jstring JNICALL Java_com_reactcppbridge_StringMessage_00024CppProxy_native_1getStringMessage(JNIEnv* jniEnv, jobject /*this*/, jlong nativeRef)
{
    try {
        DJINNI_FUNCTION_PROLOGUE1(jniEnv, nativeRef);
        const auto& ref = ::djinni::objectFromHandleAddress<::stringmessage::StringMessage>(nativeRef);
        auto r = ref->get_string_message();
        return ::djinni::release(::djinni::String::fromCpp(jniEnv, r));
    } JNI_TRANSLATE_EXCEPTIONS_RETURN(jniEnv, 0 /* value doesn't matter */)
}

}  // namespace djinni_generated
